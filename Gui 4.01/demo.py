# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Deneme.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import sys
sys.path.append(r"C:\Users\ACER\PycharmProjects\Gui\venv\Lib\site-packages")
import paramiko
from scp import SCPClient
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QApplication, QMainWindow, QFileDialog
from grafikler import Grafik
# import random
from Map import Map
from Model3D import Model
from ADI import qfi_ADI
import serial.tools.list_ports
import Thread

class Ui_MainWindow(QMainWindow):
    def __init__(self):
        super(Ui_MainWindow, self).__init__()
        self.Thread_Active = False
        self.Ayrildi = False
        self.timer = QtCore.QTimer(self)
        self.timer.timeout.connect(self.Progress)
        self.counter = 0
        self.value = 0
        self.ip = "192.168.0.31"
    def Camera_Update(self, Image):
        self.FeedLabel.setPixmap(QtGui.QPixmap.fromImage(Image))

    def Status_Update(self, Status):
        print(Status)
        if int(Status[0]) == 0:
            for status in self.Status_List:
                status.setStyleSheet(self.yesil_status)
                self.Ucusa_Hazir.setStyleSheet(self.kirmizi_status)
        if int(Status[0]) == 1:
            for status in self.Status_List:
                status.setStyleSheet(self.yesil_status)
                self.Yukselme.setStyleSheet(self.kirmizi_status)
        if int(Status[0]) == 2:
            for status in self.Status_List:
                status.setStyleSheet(self.yesil_status)
                self.Model_Uydu_Inis.setStyleSheet(self.kirmizi_status)
        if int(Status[0]) == 3:
            for status in self.Status_List:
                status.setStyleSheet(self.yesil_status)
                self.Ayrilma.setStyleSheet(self.kirmizi_status)
        if int(Status[0]) == 4:
            for status in self.Status_List:
                status.setStyleSheet(self.yesil_status)
                self.Gorev_Yuku_Inis.setStyleSheet(self.kirmizi_status)
        if int(Status[0]) == 5:
            for status in self.Status_List:
                status.setStyleSheet(self.yesil_status)
                self.Kurtarma.setStyleSheet(self.kirmizi_status)
        if int(Status[0]) == 6:
            for status in self.Status_List:
                status.setStyleSheet(self.yesil_status)
                self.Paket_Video_Alindi.setStyleSheet(self.kirmizi_status)
        if int(Status[0]) == 7:
            for status in self.Status_List:
                status.setStyleSheet(self.yesil_status)
                self.Paket_Video_Gonderildi.setStyleSheet(self.kirmizi_status)


    def Alarm_Update(self, Kod):
        if Kod[0] == "1":
            self.Alarmrenk_1.setStyleSheet(self.kirmizi)
        else:
            self.Alarmrenk_1.setStyleSheet(self.yesil)
        if Kod[1] == "1":
            self.Alarmrenk_2.setStyleSheet(self.kirmizi)
        else:
            self.Alarmrenk_2.setStyleSheet(self.yesil)
        if Kod[2] == "1":
            self.Alarmrenk_3.setStyleSheet(self.kirmizi)
        else:
            self.Alarmrenk_3.setStyleSheet(self.yesil)
        if Kod[3] == "1":
            self.Alarmrenk_4.setStyleSheet(self.kirmizi)
        else:
            self.Alarmrenk_4.setStyleSheet(self.yesil)
        if Kod[4] == "1":
            self.Alarmrenk_5.setStyleSheet(self.kirmizi)
        else:
            self.Alarmrenk_5.setStyleSheet(self.yesil)

    finished = QtCore.pyqtSignal()
    i = 0
    def Change_Thread_Status(self, Thread_Status):
        self.Thread_Active = Thread_Status
        print(self.Thread_Active)

    def Dosya_Sec_fonk(self):
        options = QFileDialog.Options()
        options |= QFileDialog.DontUseNativeDialog
        fileName, _ = QFileDialog.getOpenFileName(self, "QFileDialog.getOpenFileName()", r"C:\Users\ACER\Desktop\Raspi",
                                                  "All Files (*);;Python Files (*.py)", options=options)
        if fileName:
            self.filename = fileName
            print(self.filename)


    def Timeout_error(self):
        error_dialog = QtWidgets.QErrorMessage(self)
        error_dialog.showMessage('Timeout')

    Data_Thread_3 = QtCore.QThread()
    def Dosya_Gonder_fonk(self):
        print(self.Data_Thread_3.isRunning())
        if self.Data_Thread_3.isRunning() is False:
            self.Worker3 = Thread.Worker6(self.ip, self.filename)
            self.Worker3.moveToThread(self.Data_Thread_3)
            self.Worker3.finished.connect(self.Data_Thread_3.quit)
            self.Worker3.finished.connect(self.Data_Thread_3.exit)
            self.Worker3.finished.connect(self.Worker3.stop)
            self.Worker3.finished.connect(self.Worker3.deleteLater)
            self.Worker3.timeout.connect(self.Timeout_error)
            self.Data_Thread_3.started.connect(self.Worker3.Dosya_Gonder_fonk)
            self.Data_Thread_3.start()

        # BAUDRATE = self.Baudrate_box.currentText()
        # PORT2 = self.Port_box2.currentText()
        # PORT2 = PORT2.split(":")[0]
        # if self.Data_Thread_3.isRunning() is False:
        #     self.Worker3 = Thread.Worker6(self.ip, self.filename, PORT2, BAUDRATE)
        #     self.Worker3.moveToThread(self.Data_Thread_3)
        #     self.Worker3.finished.connect(self.Worker3.stop)
        #     self.Worker3.finished.connect(self.Data_Thread_3.quit)
        #     self.Worker3.finished.connect(self.Worker3.deleteLater)
        #     self.Data_Thread_3.finished.connect(self.Data_Thread_3.deleteLater)
        #     self.Data_Thread_3.started.connect(self.Worker3.Dosya_Gonder_fonk)
        #     self.Data_Thread_3.start()
        #     print(self.Data_Thread_3.isRunning())
        #     self.timer.start(1000)

        # self.Worker3.finished.connect(self.Data_Thread_3.deleteLater)
        # self.Data_Thread_3.finished.connect(self.Data_Thread_3.deleteLater)

        # def createSSHClient(server, port, user, password):
        #     client = paramiko.SSHClient()
        #     client.load_system_host_keys()
        #     client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
        #     client.connect(server, port, user, password)
        #     return client
        # server = "192.168.0.31"
        # port = 22
        # user = "pi"
        # password = "tausat1234"
        # ssh = createSSHClient(server, port, user, password)
        # scp = SCPClient(ssh.get_transport())
        # scp.put(self.filename.encode('unicode_escape'), "/home/pi/Video")

    def Ayril_fonk(self):
        if self.Thread_Active is True:
            self.Worker.ser.write(b"aa")
            self.Animasyon()
    def Servo_kitle_fonk(self):
        if self.Thread_Active is True:
            self.Worker.ser.write(b"bb")

    def Kalibrasyon_fonk(self):
        if self.Thread_Active is True:
            self.Worker.ser.write(b"ss")

    def Restart_fonk(self):
        if self.Thread_Active is True:
            self.Worker.ser.write(b"kk")

    def Baslat_fonk(self):
        pass

    def Ui_Update(self,display):
        if self.Telemetri.rowCount() < 100:
            self.Telemetri.insertRow(0)
        else:
            self.Telemetri.removeRow(100)
            self.Telemetri.insertRow(0)
        for x in range(len(display)):
            item = QtWidgets.QTableWidgetItem()
            self.Telemetri.setItem(0, x, item)
            item.setText(display[x])
        if self.i == 10:
            try:
                self.Harita.latitude = float(display[12])
                self.Harita.longtitude = float(display[13])
                # self.Harita.longtitude2 = float(display[15])
                # self.Harita.latitude2 = float(display[14])
            except ValueError:
                pass
            self.Harita.SetupUi()
            self.i = 0
        else:
            self.i = self.i + 1

    Data_Thread = QtCore.QThread()
    def Baglan_fonk(self):
        BAUDRATE = self.Baudrate_box.currentText()
        PORT = self.Port_box.currentText()
        PORT2 = self.Port_box2.currentText()
        PORT = PORT.split(":")[0]
        PORT2 = PORT2.split(":")[0]
        print(PORT)
        print(BAUDRATE)
        print(f"Ana döngü : {self.Thread_Active}, {self.Data_Thread.isRunning()}")
        if self.Thread_Active is False and self.Data_Thread.isRunning() is False:
            self.Worker = Thread.Worker2(PORT, BAUDRATE)
            self.Worker.moveToThread(self.Data_Thread)
            self.finished.connect(self.Worker.stop)
            self.Data_Thread.started.connect(self.Worker.run)
            self.Data_Thread.finished.connect(self.Worker.stop)
            # self.Data_Thread.finished.connect(self.Data_Thread.deleteLater)
            self.Data_Thread.start()

            # self.Worker3 = Thread.Worker1(self.Telemetri, self.Worker, self.Harita)
            self.Worker2 = Thread.Worker4(self.Worker, self.temp_data_line, self.alti_data_line, self.alti_diff_data_line, self.pressure_data_line, self.velocity_data_line, self.Batarya_Value, self.Batarya)
            self.Data_Thread_2 = QtCore.QThread()
            self.Worker2.moveToThread(self.Data_Thread_2)
            self.Data_Thread_2.started.connect(self.Worker2.run)
            self.Data_Thread_2.finished.connect(self.Worker2.stop)
            self.Data_Thread_2.start()



            # self.Worker3.moveToThread(self.Data_Thread_3)
            # self.Data_Thread_3.started.connect(self.Worker3.run)
            # self.Data_Thread_3 = QtCore.QThread()
            # self.Data_Thread_3.finished.connect(self.Data_Thread_3.deleteLater)
            # self.Data_Thread_3.start()
            # self.Update_Thread2 = Thread.Worker4(self.Data_Thread, self.temp_data_line, self.alti_data_line, self.alti_diff_data_line, self.pressure_data_line, self.velocity_data_line, self.Batarya_Value, self.Batarya)
            # self.Update_Thread2.start()
            self.Worker.Alarm_Update.connect(self.Alarm_Update)
            self.Worker.Model_Update.connect(self.Model_Update)
            self.Worker.Telemetri_Update.connect(self.Ui_Update)
            self.Worker.State_Update.connect(self.Status_Update)
            self.Worker.Status_Signal.connect(self.Change_Thread_Status)
            self.finished.connect(self.Worker.stop)


    def Baglantiyi_kes_fonk(self):
        if self.Data_Thread.isRunning() is True:
            print("Bağlantı kapatılıyorr")
            self.finished.emit()
            self.Worker.ThreadActive = False
            self.Worker2.ThreadActive = False
            self.Thread_Active = False
            self.Data_Thread_3.quit()
            self.Data_Thread_2.quit()
            self.Data_Thread.quit()

    def Animasyon(self):
        if self.Thread_Active is True:
            self.Animasyon_thread = Thread.Worker5(self.Model, self.angles)
            self.Animasyon_thread.start()
        if self.Thread_Active is False:
            self.Animasyon_thread = Thread.Worker5(self.Model, [0, 0, 0])
            self.Animasyon_thread.start()
        self.Ayrildi = True

    def Yenile_fonk(self):
        self.Port_box.clear()
        self.Port_box2.clear()
        self.ports = serial.tools.list_ports.comports()
        i = 0
        for port, desc, h in sorted(self.ports):
            self.Port_box.addItem("{}: {}".format(port, desc))
            self.Port_box2.addItem("{}: {}".format(port, desc))
            text = "{}: {}".format(port, desc)
            self.Port_box.setItemText(i, text)
            self.Port_box2.setItemText(i, text)
            i = i + 1


    def Kayit_Baslat_fonk(self):
        self.Kamera.Record = True
        self.widget.setStyleSheet("background-color: rgb(0, 0, 0, 100);border: 2.5px solid;border-color: rgb(255, 0, 0); ")

    def Kayit_Durdur_fonk(self):
        self.Kamera.Record = False
        self.widget.setStyleSheet("background-color: rgb(0, 0, 0, 100);")

    def Model_Update(self, angles):
        self.Model.view.removeItem(self.Model.mesh_gy)
        self.Model.Restore_gy()
        self.Model.view.addItem(self.Model.mesh_gy)
        self.Model.mesh_gy.translate(dx=0, dy=0, dz=-95)
        self.Model.mesh_gy.rotate(angle=float(angles[0]), x=1, y=0, z=0)
        self.Model.mesh_gy.rotate(angle=float(angles[1]), x=0, y=1, z=0)
        self.Model.mesh_gy.rotate(angle=float(angles[2]), x=0, y=0, z=1)
        if self.Ayrildi is False:
            self.Model.view.removeItem(self.Model.mesh_tasiyici)
            self.Model.Restore_tasiyici()
            self.Model.view.addItem(self.Model.mesh_tasiyici)
            self.Model.mesh_tasiyici.translate(dx=0, dy=0, dz=155)
            self.Model.mesh_tasiyici.rotate(angle=float(angles[0]), x=1, y=0, z=0)
            self.Model.mesh_tasiyici.rotate(angle=float(angles[1]), x=0, y=1, z=0)
            self.Model.mesh_tasiyici.rotate(angle=float(angles[2]), x=0, y=0, z=1)
        self.Pitch.setText(f"Pitch={angles[0]}°")
        self.Roll.setText(f"Roll={angles[1]}°")
        self.Yaw.setText(f"Yaw={angles[2]}°")
        self.adi.setPitch(float(angles[0]))
        self.adi.setRoll(float(angles[1]))
        self.adi.update()
        self.angles = angles

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1920, 1016)
        MainWindow.setWindowIcon(QtGui.QIcon('K.png'))
        MainWindow.setWindowTitle("TAU-SAT Yer İstasyonu")

        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setStyleSheet("font: 75 8pt \"Courier New\";\n""")
        Pushbutton_css = "QPushButton\n""{\n""background-color: rgb(0, 0, 0);\n""color: rgb(0, 255, 51);\n""\n""border-style: outset;\n""border-width: 1px;\n""border-radius: 3px;\n""border-color: rgb(49, 49, 49)\n""\n""}\n""\n""\n""QPushButton::disabled\n""{\n""    background-color: #404040;\n""    color: #656565;\n""    border-color: #051a39;\n""\n""}\n""\n""\n""QPushButton::hover\n""{\n""    \n""    background-color: rgb(47, 47, 47);\n""    color: rgb(0, 255, 51);\n""    border-style: solid;\n""    border-width: 1px;\n""    border-radius: 3px;\n""    border-color: #051a39;\n""\n""}\n""\n""\n""QPushButton::pressed\n""{\n""    \n""    background-color: rgb(255, 0, 4);\n""    color: #ffffff;\n""    border-style: solid;\n""    border-width: 2px;\n""    border-radius: 3px;\n""    border-color: #000000;\n""\n""}"
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.centralwidget.sizePolicy().hasHeightForWidth())
        self.centralwidget.setSizePolicy(sizePolicy)
        self.centralwidget.setMinimumSize(QtCore.QSize(0, 0))
        self.centralwidget.setStyleSheet("QWidget#centralwidget{\n""background-color: rgb(0, 0, 0);\n""background-image: url(:/Resimler/STScI-01GKMKRHSSCD5RKJYSB4DFH8D8.png)\n""};\n""\n""")
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setSpacing(1)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.TopContainer = QtWidgets.QWidget(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(10)
        sizePolicy.setVerticalStretch(10)
        sizePolicy.setHeightForWidth(self.TopContainer.sizePolicy().hasHeightForWidth())
        self.TopContainer.setSizePolicy(sizePolicy)
        self.TopContainer.setStyleSheet("background:transparent;\n""\n""\n""")
        self.TopContainer.setObjectName("TopContainer")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.TopContainer)
        self.verticalLayout.setContentsMargins(2, 2, 2, 2)
        self.verticalLayout.setSpacing(2)
        self.verticalLayout.setObjectName("verticalLayout")
        self.Top_panel = QtWidgets.QWidget(self.TopContainer)
        self.Top_panel.setStyleSheet("background:transparent;\n""background-color: rgba(0, 0, 0, 150);")
        self.Top_panel.setObjectName("Top_panel")
        self.Logo = QtWidgets.QLabel(self.Top_panel)
        self.Logo.setGeometry(QtCore.QRect(10, 10, 111, 111))
        self.Logo.setStyleSheet("background:transparent;")
        self.Logo.setText("")
        self.Logo.setPixmap(QtGui.QPixmap(":/Resimler/Logo.png"))
        self.Logo.setScaledContents(True)
        self.Logo.setObjectName("Logo")
        self.Butonlar = QtWidgets.QFrame(self.Top_panel)
        self.Butonlar.setGeometry(QtCore.QRect(390, 20, 451, 111))
        self.Butonlar.setStyleSheet("opacity: 1;\n""font: 75 8pt \"Courier New\";\n""background: transparent;")
        self.Butonlar.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.Butonlar.setFrameShadow(QtWidgets.QFrame.Plain)
        self.Butonlar.setLineWidth(1)
        self.Butonlar.setObjectName("Butonlar")
        self.gridlayout = QtWidgets.QGridLayout(self.Butonlar)
        self.gridlayout.setContentsMargins(0, 0, 0, 0)
        self.gridlayout.setHorizontalSpacing(3)
        self.gridlayout.setVerticalSpacing(0)
        self.gridlayout.setObjectName("gridlayout")
        self.Baslat = QtWidgets.QPushButton(self.Butonlar)
        self.Baslat.setStyleSheet(Pushbutton_css)
        self.Baslat.setObjectName("Baslat")
        self.Baslat.clicked.connect(self.Baslat_fonk)
        self.gridlayout.addWidget(self.Baslat, 0, 0, 1, 1)
        self.Restart = QtWidgets.QPushButton(self.Butonlar)
        self.Restart.setStyleSheet(Pushbutton_css)
        self.Restart.setObjectName("Restart")
        self.Restart.clicked.connect(self.Restart_fonk)
        self.gridlayout.addWidget(self.Restart, 0, 2, 1, 1)
        self.Dosya_Sec = QtWidgets.QPushButton(self.Butonlar)
        self.Dosya_Sec.setStyleSheet(Pushbutton_css)
        self.Dosya_Sec.setObjectName("Dosya_Sec")
        self.Dosya_Sec.clicked.connect(self.Dosya_Sec_fonk)
        self.gridlayout.addWidget(self.Dosya_Sec, 0, 1, 1, 1)
        self.Dosya_Gonder = QtWidgets.QPushButton(self.Butonlar)
        self.Dosya_Gonder.setStyleSheet(Pushbutton_css)
        self.Dosya_Gonder.setObjectName("Dosya_Gonder")
        self.Dosya_Gonder.clicked.connect(self.Dosya_Gonder_fonk)
        self.gridlayout.addWidget(self.Dosya_Gonder, 1, 1, 1, 1)
        self.Servo_kitle = QtWidgets.QPushButton(self.Butonlar)
        self.Servo_kitle.setStyleSheet(Pushbutton_css)
        self.Servo_kitle.setObjectName("Servo_kitle")
        self.Servo_kitle.clicked.connect(self.Servo_kitle_fonk)
        self.gridlayout.addWidget(self.Servo_kitle, 1, 3, 1, 1)
        self.Ayril = QtWidgets.QPushButton(self.Butonlar)
        self.Ayril.setStyleSheet(Pushbutton_css)
        self.Ayril.setObjectName("Ayril")
        self.Ayril.clicked.connect(self.Ayril_fonk)
        self.gridlayout.addWidget(self.Ayril, 1, 0, 1, 1)
        self.pushButton_9 = QtWidgets.QPushButton(self.Butonlar)
        self.pushButton_9.setStyleSheet(Pushbutton_css)
        self.pushButton_9.setObjectName("pushButton_9")
        self.gridlayout.addWidget(self.pushButton_9, 1, 2, 1, 1)
        self.Kalibrasyon_3 = QtWidgets.QPushButton(self.Butonlar)
        self.Kalibrasyon_3.setStyleSheet(Pushbutton_css)
        self.Kalibrasyon_3.setObjectName("Kalibrasyon_3")
        self.Kalibrasyon_3.clicked.connect(self.Kalibrasyon_fonk)
        self.gridlayout.addWidget(self.Kalibrasyon_3, 0, 3, 1, 1)
        self.Alarm_ikaz = QtWidgets.QWidget(self.Top_panel)
        self.Alarm_ikaz.setGeometry(QtCore.QRect(130, 30, 251, 91))
        self.Alarm_ikaz.setStyleSheet("QWidget#Alarm_ikaz{\n""background-color: rgb(0, 0, 0);\n""background:transparent;\n""}")
        self.Alarm_ikaz.setObjectName("Alarm_ikaz")
        self.layoutWidget_2 = QtWidgets.QWidget(self.Alarm_ikaz)
        self.layoutWidget_2.setGeometry(QtCore.QRect(10, 10, 231, 71))
        self.layoutWidget_2.setObjectName("layoutWidget_2")
        self.Alarm_vLayout1 = QtWidgets.QVBoxLayout(self.layoutWidget_2)
        self.Alarm_vLayout1.setContentsMargins(0, 0, 0, 0)
        self.Alarm_vLayout1.setSpacing(0)
        self.Alarm_vLayout1.setObjectName("Alarm_vLayout1")
        self.Alarm_hLayout1 = QtWidgets.QHBoxLayout()
        self.Alarm_hLayout1.setSpacing(0)
        self.Alarm_hLayout1.setObjectName("Alarm_hLayout1")
        self.Alarm_5 = QtWidgets.QLabel(self.layoutWidget_2)
        self.Alarm_5.setStyleSheet("color: rgb(255, 255, 255);")
        self.Alarm_5.setAlignment(QtCore.Qt.AlignCenter)
        self.Alarm_5.setObjectName("Alarm_5")
        self.Alarm_hLayout1.addWidget(self.Alarm_5)
        self.Alarm_1 = QtWidgets.QLabel(self.layoutWidget_2)
        self.Alarm_1.setStyleSheet("color: rgb(255, 255, 255);")
        self.Alarm_1.setAlignment(QtCore.Qt.AlignCenter)
        self.Alarm_1.setObjectName("Alarm_1")
        self.Alarm_hLayout1.addWidget(self.Alarm_1)
        self.Alarm_2 = QtWidgets.QLabel(self.layoutWidget_2)
        self.Alarm_2.setStyleSheet("color: rgb(255, 255, 255);")
        self.Alarm_2.setAlignment(QtCore.Qt.AlignCenter)
        self.Alarm_2.setObjectName("Alarm_2")
        self.Alarm_hLayout1.addWidget(self.Alarm_2)
        self.Alarm_3 = QtWidgets.QLabel(self.layoutWidget_2)
        self.Alarm_3.setStyleSheet("color: rgb(255, 255, 255);")
        self.Alarm_3.setAlignment(QtCore.Qt.AlignCenter)
        self.Alarm_3.setObjectName("Alarm_3")
        self.Alarm_hLayout1.addWidget(self.Alarm_3)
        self.Alarm_4 = QtWidgets.QLabel(self.layoutWidget_2)
        self.Alarm_4.setStyleSheet("color: rgb(255, 255, 255);")
        self.Alarm_4.setAlignment(QtCore.Qt.AlignCenter)
        self.Alarm_4.setObjectName("Alarm_4")
        self.Alarm_hLayout1.addWidget(self.Alarm_4)
        self.Alarm_vLayout1.addLayout(self.Alarm_hLayout1)
        self.Alarm_hLayout2 = QtWidgets.QHBoxLayout()
        self.Alarm_hLayout2.setSpacing(1)
        self.Alarm_hLayout2.setObjectName("Alarm_hLayout2")
        self.kirmizi = "background-color: rgb(255, 59, 0);"
        self.yesil = "background-color: rgb(59, 255, 0);"
        self.Alarmrenk_1 = QtWidgets.QLabel(self.layoutWidget_2)
        self.Alarmrenk_1.setStyleSheet(self.yesil)
        self.Alarmrenk_1.setText("")
        self.Alarmrenk_1.setObjectName("Alarmrenk_1")
        self.Alarm_hLayout2.addWidget(self.Alarmrenk_1)
        self.Alarmrenk_2 = QtWidgets.QLabel(self.layoutWidget_2)
        self.Alarmrenk_2.setStyleSheet(self.yesil)
        self.Alarmrenk_2.setText("")
        self.Alarmrenk_2.setObjectName("Alarmrenk_2")
        self.Alarm_hLayout2.addWidget(self.Alarmrenk_2)
        self.Alarmrenk_3 = QtWidgets.QLabel(self.layoutWidget_2)
        self.Alarmrenk_3.setStyleSheet(self.yesil)
        self.Alarmrenk_3.setText("")
        self.Alarmrenk_3.setObjectName("Alarmrenk_3")
        self.Alarm_hLayout2.addWidget(self.Alarmrenk_3)
        self.Alarmrenk_4 = QtWidgets.QLabel(self.layoutWidget_2)
        self.Alarmrenk_4.setStyleSheet(self.kirmizi)
        self.Alarmrenk_4.setText("")
        self.Alarmrenk_4.setObjectName("Alarmrenk_4")
        self.Alarm_hLayout2.addWidget(self.Alarmrenk_4)
        self.Alarmrenk_5 = QtWidgets.QLabel(self.layoutWidget_2)
        self.Alarmrenk_5.setStyleSheet(self.yesil)
        self.Alarmrenk_5.setText("")
        self.Alarmrenk_5.setObjectName("Alarmrenk_5")
        self.Alarm_hLayout2.addWidget(self.Alarmrenk_5)
        self.Alarm_vLayout1.addLayout(self.Alarm_hLayout2)
        self.Alarm_Ikaz_Sistemi = QtWidgets.QLabel(self.Top_panel)
        self.Alarm_Ikaz_Sistemi.setGeometry(QtCore.QRect(130, 10, 251, 16))
        self.Alarm_Ikaz_Sistemi.setStyleSheet("color: rgb(255, 255, 255);\n""font-weight:bold;\n""background:transparent;")
        self.Alarm_Ikaz_Sistemi.setAlignment(QtCore.Qt.AlignCenter)
        self.Alarm_Ikaz_Sistemi.setObjectName("Alarm_Ikaz_Sistemi")
        self.Batarya_Container = QtWidgets.QWidget(self.Top_panel)
        self.Batarya_Container.setGeometry(QtCore.QRect(1800, 60, 101, 71))
        self.Batarya_Container.setStyleSheet("QWidget{\n""    background:transparent;\n""}\n""\n""#QProgressBar {\n""    border: 2px solid grey;\n""    border-radius: 5px;\n""    \n""    background-color: rgb(0, 0, 0);\n""}\n""\n""#QProgressBar::chunk {\n""    background-color: #05B8CC;\n""    width: 20px;\n""}")
        self.Batarya_Container.setObjectName("Batarya_Container")
        self.Batarya = QtWidgets.QProgressBar(self.Batarya_Container)
        self.Batarya.setGeometry(QtCore.QRect(60, 20, 31, 51))
        self.Batarya.setStyleSheet("\n""#Batarya{\n""    border: 1px solid;\n""    border-color: rgb(39, 39, 39);\n""    text-align: center;\n""    background-color: rgb(0, 0, 0);\n""    border-radius: 4px;\n""}\n""\n""#Batarya::chunk {\n""    background-color: rgb(4, 255, 4);\n""    height: 5px;\n""    margin: 0.5px;\n""}")
        self.Batarya.setMaximum(100)
        self.Batarya.setProperty("value", 89)
        self.Batarya.setTextVisible(False)
        self.Batarya.setOrientation(QtCore.Qt.Vertical)
        self.Batarya.setObjectName("Batarya")
        self.Batarya_Value = QtWidgets.QLabel(self.Batarya_Container)
        self.Batarya_Value.setGeometry(QtCore.QRect(10, 50, 41, 16))
        self.Batarya_Value.setStyleSheet("color: rgb(255, 255, 255);\n""font: 10pt;\n""font-weight: bold;")
        self.Batarya_Value.setAlignment(QtCore.Qt.AlignCenter)
        self.Batarya_Value.setObjectName("Batarya_Value")
        self.Video_Durum1 = QtWidgets.QProgressBar(self.Top_panel)
        self.Video_Durum1.setGeometry(QtCore.QRect(850, 30, 270, 21))
        self.Video_Durum1.setStyleSheet("#Video_Durum1{\n""    color:rgb(255, 255, 255);\n""    font: 11pt \"Courier New\";\n""    font-weight:bold;\n""    border: 1px solid;\n""    border-color: rgb(39, 39, 39);\n""    text-align: center;\n""    background-color: rgb(0, 0, 0);\n""    border-radius: 4px;\n""}\n""\n""#Video_Durum1::chunk {\n""    background-color: rgb(0, 255, 0);\n""    width: 10px;\n""    margin: 0.5;\n""}\n""")
        self.Video_Durum1.setProperty("value", 0)
        self.Video_Durum1.setAlignment(QtCore.Qt.AlignCenter)
        self.Video_Durum1.setTextVisible(True)
        self.Video_Durum1.setOrientation(QtCore.Qt.Horizontal)
        self.Video_Durum1.setTextDirection(QtWidgets.QProgressBar.TopToBottom)
        self.Video_Durum1.setObjectName("Video_Durum1")
        self.Video_Aktarm_Durumu1 = QtWidgets.QLabel(self.Top_panel)
        self.Video_Aktarm_Durumu1.setGeometry(QtCore.QRect(850, 10, 270, 16))
        self.Video_Aktarm_Durumu1.setStyleSheet("color: rgb(255, 255, 255);\n""font-weight:bold;\n""background:transparent;")
        self.Video_Aktarm_Durumu1.setAlignment(QtCore.Qt.AlignCenter)
        self.Video_Aktarm_Durumu1.setObjectName("Video_Aktarm_Durumu1")
        self.Video_Aktarm_Durumu1_2 = QtWidgets.QLabel(self.Top_panel)
        self.Video_Aktarm_Durumu1_2.setGeometry(QtCore.QRect(850, 60, 270, 16))
        self.Video_Aktarm_Durumu1_2.setStyleSheet("color: rgb(255, 255, 255);\n""font-weight:bold;\n""background:transparent;")
        self.Video_Aktarm_Durumu1_2.setAlignment(QtCore.Qt.AlignCenter)
        self.Video_Aktarm_Durumu1_2.setObjectName("Video_Aktarm_Durumu1_2")
        self.Video_Durum2 = QtWidgets.QProgressBar(self.Top_panel)
        self.Video_Durum2.setGeometry(QtCore.QRect(850, 90, 270, 21))
        self.Video_Durum2.setStyleSheet("#Video_Durum2{\n""    color:rgb(255, 255, 255);\n""    font: 11pt \"Courier New\";\n""    font-weight:bold;\n""    border: 1px solid;\n""    border-color: rgb(39, 39, 39);\n""    text-align: center;\n""    background-color: rgb(0, 0, 0);\n""    border-radius: 4px;\n""}\n""\n""#Video_Durum2::chunk {\n""    background-color: rgb(0, 255, 0);\n""    width: 10px;\n""    margin: 0.5;\n""}\n""")
        self.Video_Durum2.setProperty("value", 0)
        self.Video_Durum2.setAlignment(QtCore.Qt.AlignCenter)
        self.Video_Durum2.setTextVisible(True)
        self.Video_Durum2.setOrientation(QtCore.Qt.Horizontal)
        self.Video_Durum2.setTextDirection(QtWidgets.QProgressBar.TopToBottom)
        self.Video_Durum2.setObjectName("Video_Durum2")
        self.widget_6 = QtWidgets.QWidget(self.Top_panel)
        self.widget_6.setGeometry(QtCore.QRect(1400, 0, 381, 134))
        self.widget_6.setStyleSheet("color:rgb(255, 255, 255);\n""font-weight:bold;\n""text-align:center;")
        self.widget_6.setObjectName("widget_6")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.widget_6)
        self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_3.setSpacing(1)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.kirmizi_status = "background-color: rgb(255, 0, 0, 50);"
        self.yesil_status = "background-color: rgb(0, 255, 0, 50);"
        self.Ucusa_Hazir = QtWidgets.QLabel(self.widget_6)
        self.Ucusa_Hazir.setStyleSheet("background-color: rgb(255, 0, 0, 50);")
        self.Ucusa_Hazir.setAlignment(QtCore.Qt.AlignCenter)
        self.Ucusa_Hazir.setObjectName("Ucusa_Hazir")
        self.verticalLayout_3.addWidget(self.Ucusa_Hazir)
        self.Yukselme = QtWidgets.QLabel(self.widget_6)
        self.Yukselme.setStyleSheet("background-color: rgb(0, 255, 0, 50);")
        self.Yukselme.setAlignment(QtCore.Qt.AlignCenter)
        self.Yukselme.setObjectName("Yukselme")
        self.verticalLayout_3.addWidget(self.Yukselme)
        self.Model_Uydu_Inis = QtWidgets.QLabel(self.widget_6)
        self.Model_Uydu_Inis.setStyleSheet("background-color: rgb(0, 255, 0, 50);")
        self.Model_Uydu_Inis.setAlignment(QtCore.Qt.AlignCenter)
        self.Model_Uydu_Inis.setObjectName("Model_Uydu_Inis")
        self.verticalLayout_3.addWidget(self.Model_Uydu_Inis)
        self.Ayrilma = QtWidgets.QLabel(self.widget_6)
        self.Ayrilma.setStyleSheet("background-color: rgb(0, 255, 0, 50);")
        self.Ayrilma.setAlignment(QtCore.Qt.AlignCenter)
        self.Ayrilma.setObjectName("Ayrilma")
        self.verticalLayout_3.addWidget(self.Ayrilma)
        self.Gorev_Yuku_Inis = QtWidgets.QLabel(self.widget_6)
        self.Gorev_Yuku_Inis.setStyleSheet("background-color: rgb(0, 255, 0, 50);")
        self.Gorev_Yuku_Inis.setAlignment(QtCore.Qt.AlignCenter)
        self.Gorev_Yuku_Inis.setObjectName("Gorev_Yuku_Inis")
        self.verticalLayout_3.addWidget(self.Gorev_Yuku_Inis)
        self.Kurtarma = QtWidgets.QLabel(self.widget_6)
        self.Kurtarma.setStyleSheet("background-color: rgb(0, 255, 0, 50);")
        self.Kurtarma.setAlignment(QtCore.Qt.AlignCenter)
        self.Kurtarma.setObjectName("Kurtarma")
        self.verticalLayout_3.addWidget(self.Kurtarma)
        self.Paket_Video_Alindi = QtWidgets.QLabel(self.widget_6)
        self.Paket_Video_Alindi.setStyleSheet("background-color: rgb(0, 255, 0, 50);")
        self.Paket_Video_Alindi.setAlignment(QtCore.Qt.AlignCenter)
        self.Paket_Video_Alindi.setObjectName("Paket_Video_Alindi")
        self.verticalLayout_3.addWidget(self.Paket_Video_Alindi)
        self.Paket_Video_Gonderildi = QtWidgets.QLabel(self.widget_6)
        self.Paket_Video_Gonderildi.setStyleSheet("background-color: rgb(0, 255, 0, 50);")
        self.Paket_Video_Gonderildi.setAlignment(QtCore.Qt.AlignCenter)
        self.Paket_Video_Gonderildi.setObjectName("Paket_Video_Gonderildi")
        self.verticalLayout_3.addWidget(self.Paket_Video_Gonderildi)
        self.Status_List = [self.Ucusa_Hazir, self.Yukselme, self.Model_Uydu_Inis, self.Ayrilma, self.Gorev_Yuku_Inis, self.Kurtarma, self.Paket_Video_Alindi, self.Paket_Video_Gonderildi]

        self.Utility = QtWidgets.QWidget(self.Top_panel)
        self.Utility.setObjectName(u"Utility")
        self.Utility.setGeometry(QtCore.QRect(1130, 0, 261, 131))
        self.Utility.setStyleSheet(u"background: transparent;\n""font: 75 8pt \"Courier New\";\n""")

        self.layoutWidget = QtWidgets.QWidget(self.Utility)
        self.layoutWidget.setGeometry(QtCore.QRect(10, 10, 116, 120))
        self.layoutWidget.setObjectName("layoutWidget")
        self.Connection_vLayout = QtWidgets.QVBoxLayout(self.layoutWidget)
        self.Connection_vLayout.setContentsMargins(0, 0, 0, 0)
        self.Connection_vLayout.setSpacing(0)
        self.Connection_vLayout.setObjectName("Connection_vLayout")
        self.Baudrate_box = QtWidgets.QComboBox(self.layoutWidget)
        self.Baudrate_box.setStyleSheet("color: rgb(255, 255, 255);\n""font-weight:bold;\n""background-color: rgb(0, 0, 0, 50);\n""border: 1px solid;\n""border-color: rgb(255, 229, 229);")
        self.Baudrate_box.setObjectName("Baudrate_box")
        self.Baudrate_box.addItem("")
        self.Baudrate_box.addItem("")
        self.Baudrate_box.addItem("")
        self.Baudrate_box.addItem("")
        self.Baudrate_box.addItem("")
        self.Connection_vLayout.addWidget(self.Baudrate_box)
        self.Port_box = QtWidgets.QComboBox(self.layoutWidget)
        self.Port_box.setStyleSheet("color: rgb(255, 255, 255);\n""font-weight:bold;\n""background-color: rgb(0, 0, 0, 50);\n""border: 1px solid;\n""border-color: rgb(255, 229, 229);")
        self.Port_box.setObjectName("Port_box")
        self.Port_box2 = QtWidgets.QComboBox(self.Utility)
        self.Port_box2.setStyleSheet("color: rgb(255, 255, 255);\n""font-weight:bold;\n""background-color: rgb(0, 0, 0, 50);\n""border: 1px solid;\n""border-color: rgb(255, 229, 229);")
        self.Port_box2.setObjectName("Port_box2")
        self.Port_box2.setGeometry(QtCore.QRect(135, 38, 116, 20))
        self.ports = serial.tools.list_ports.comports()
        i = 0
        for port, desc, h in sorted(self.ports):
                self.Port_box.addItem("{}: {}".format(port, desc))
                self.Port_box2.addItem("{}: {}".format(port, desc))
                text = "{}: {}".format(port, desc)
                self.Port_box.setItemText(i, text)
                self.Port_box2.setItemText(i, text)
                i = i +1

        self.Connection_vLayout.addWidget(self.Port_box)
        self.Baglan = QtWidgets.QPushButton(self.layoutWidget)
        self.Baglan.setStyleSheet(Pushbutton_css)
        self.Baglan.setObjectName("Baglan")
        self.Connection_vLayout.addWidget(self.Baglan)
        self.Baglan.clicked.connect(self.Baglan_fonk)
        self.Baglantiyi_kes = QtWidgets.QPushButton(self.layoutWidget)
        self.Baglantiyi_kes.setStyleSheet(Pushbutton_css)
        self.Baglantiyi_kes.setObjectName("Baglantiyi_kes")
        self.Baglantiyi_kes.clicked.connect(self.Baglantiyi_kes_fonk)
        self.Connection_vLayout.addWidget(self.Baglantiyi_kes)
        self.Yenile = QtWidgets.QPushButton(self.layoutWidget)
        self.Yenile.setStyleSheet(Pushbutton_css)
        self.Yenile.setObjectName("Yenile")
        self.Yenile.setText("YENİLE")
        self.Yenile.clicked.connect(self.Yenile_fonk)
        self.Connection_vLayout.addWidget(self.Yenile)
        self.Kayit_Komut = QtWidgets.QWidget(self.Utility)
        self.Kayit_Komut.setObjectName(u"Kayit_Komut")
        self.Kayit_Komut.setGeometry(QtCore.QRect(130, 60, 120, 51))
        self.Kayit_Komut.setStyleSheet(u"font: 75 6pt \"Courier New\";")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.Kayit_Komut)
        self.verticalLayout_5.setSpacing(0)
        self.verticalLayout_5.setObjectName(u"verticalLayout_5")
        self.verticalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.Kayit_Baslat = QtWidgets.QPushButton(self.Kayit_Komut)
        self.Kayit_Baslat.setObjectName(u"Kayit_Baslat")
        self.Kayit_Baslat.setText("Kam. Kayıt Başlat")
        self.Kayit_Baslat.setStyleSheet(Pushbutton_css)
        self.Kayit_Baslat.clicked.connect(self.Kayit_Baslat_fonk)
        self.verticalLayout_5.addWidget(self.Kayit_Baslat)

        self.Kayit_Durdur = QtWidgets.QPushButton(self.Kayit_Komut)
        self.Kayit_Durdur.setObjectName(u"Kayit_Durdur")
        self.Kayit_Durdur.setText("Kam. Kayıt Durdur")
        self.Kayit_Durdur.setStyleSheet(Pushbutton_css)
        self.Kayit_Durdur.clicked.connect(self.Kayit_Durdur_fonk)
        self.verticalLayout_5.addWidget(self.Kayit_Durdur)

        self.verticalLayout.addWidget(self.Top_panel)
        self.Bottom_panel = QtWidgets.QWidget(self.TopContainer)
        self.Bottom_panel.setStyleSheet("background:transparent;\n""background-color: rgba(255, 255, 255, 0);")
        self.Bottom_panel.setObjectName("Bottom_panel")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.Bottom_panel)
        self.horizontalLayout_2.setContentsMargins(2, 2, 2, 2)
        self.horizontalLayout_2.setSpacing(2)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.widget_5 = QtWidgets.QWidget(self.Bottom_panel)
        self.widget_5.setObjectName("widget_5")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.widget_5)
        self.verticalLayout_4.setContentsMargins(2, 2, 2, 2)
        self.verticalLayout_4.setSpacing(2)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.widget_7 = QtWidgets.QWidget(self.widget_5)
        self.widget_7.setStyleSheet("")
        self.widget_7.setObjectName("widget_7")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.widget_7)
        self.horizontalLayout_3.setContentsMargins(9, 9, 9, 9)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")

        self.widget = QtWidgets.QWidget(self.widget_7)
        self.widget.setStyleSheet("background-color: rgb(0, 0, 0, 0);")
        self.widget.setObjectName("widget")
        self.FeedLabel = QtWidgets.QLabel(self.widget)
        self.FeedLabel.setGeometry(0, 0, 468, 258)
        self.Kamera = Thread.Worker3()
        self.Kamera.start()
        self.Kamera.ImageUpdate.connect(self.Camera_Update)
        self.horizontalLayout_3.addWidget(self.widget)

        self.widget_2 = QtWidgets.QWidget(self.widget_7)
        self.widget_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.widget_2.setObjectName("widget_2")
        self.horizontalLayout_3.addWidget(self.widget_2)
        self.Harita = Map(Window=self.widget_2)


        self.widget_3 = QtWidgets.QWidget(self.widget_7)
        self.widget_3.setStyleSheet("background-color: rgb(0, 0, 0, 0);")
        self.widget_3.setObjectName("widget_3")
        self.horizontalLayout_3.addWidget(self.widget_3)
        self.Model = Model()
        self.Model.SetupUi(self.widget_3)
        self.Model3D = self.Model.view
        self.Model3D.setGeometry(QtCore.QRect(0, 0, 468, 256))
        self.Model3D.setObjectName("Model3D")
        self.Angles = QtWidgets.QWidget(self.widget_3)
        self.Angles.setGeometry(QtCore.QRect(0, 0, 81, 111))
        self.Angles.setObjectName("Angles")
        self.Angles_Layout = QtWidgets.QVBoxLayout(self.Angles)
        self.Angles_Layout.setContentsMargins(0, 0, 0, 0)
        self.Angles_Layout.setObjectName("Angles_Layout")
        self.Roll = QtWidgets.QLabel(self.Angles)
        self.Roll.setTextFormat(QtCore.Qt.AutoText)
        self.Roll.setObjectName("Roll")
        self.Angles_Layout.addWidget(self.Roll)
        self.Pitch = QtWidgets.QLabel(self.Angles)
        self.Pitch.setObjectName("Pitch")
        self.Angles_Layout.addWidget(self.Pitch)
        self.Yaw = QtWidgets.QLabel(self.Angles)
        self.Yaw.setObjectName("Yaw")
        self.Angles_Layout.addWidget(self.Yaw)
        self.Roll.setText("Roll=0°")
        self.Pitch.setText("Pitch=0°")
        self.Yaw.setText("Yaw=0°")
        self.Angles.setStyleSheet("font-family: 'Lucida Console', 'Courier New', monospace; color:rgb(255,255,255); font-weight: 600;")

        self.widget_4 = QtWidgets.QWidget(self.widget_7)
        self.widget_4.setStyleSheet("background-color: rgb(0,0,0,50);")
        self.widget_4.setObjectName("widget_4")
        self.horizontalLayout_3.addWidget(self.widget_4)
        self.verticalLayout_4.addWidget(self.widget_7)
        self.adi = qfi_ADI(self)
        self.adi.resize(468, 256)
        self.adi.reinit()
        self.Gosterge = QtWidgets.QWidget(self.widget_4)
        self.Gosterge.setGeometry(QtCore.QRect(0, 0, 468, 256))
        self.Gosterge.setObjectName("Gosterge")
        self.Altimeter = QtWidgets.QGridLayout(self.Gosterge)
        self.Altimeter.addWidget(self.adi, 0, 0)

        self.widget_8 = QtWidgets.QWidget(self.widget_5)
        self.widget_8.setStyleSheet("background-color: rgb(0, 0, 0, 100);")
        self.widget_8.setObjectName("widget_8")

        self.graphs = Grafik()
        self.graphs.setupUi(self.widget_8)
        self.graphs.horizontalLayoutWidget.setGeometry(QtCore.QRect(0, 0, 1908, 275))
        self.temp_x = []
        self.temp_y = []
        self.temp_data_line = self.graphs.Temp.plot(self.temp_x, self.temp_y, pen=self.graphs.Temp_pen)
        self.alti_x = []
        self.alti_y = []
        self.alti_data_line = self.graphs.Altitude.plot(self.alti_x, self.alti_y, pen=self.graphs.Temp_pen)
        self.alti_diff_x = []
        self.alti_diff_y = []
        self.alti_diff_data_line = self.graphs.Altitude_Difference.plot(self.alti_diff_x, self.alti_diff_y, pen=self.graphs.Temp_pen)
        self.pressure_x = []
        self.pressure_y = []
        self.pressure_data_line = self.graphs.Pressure.plot(self.pressure_x, self.pressure_y, pen=self.graphs.Temp_pen)
        self.velocity_x = []
        self.velocity_y = []
        self.velocity_data_line = self.graphs.Velocity.plot(self.velocity_x, self.velocity_y, pen=self.graphs.Temp_pen)
        # self.temp_x = []
        # self.temp_y = []
        # self.temp_x = list(range(1,50))
        # self.temp_y = random.choices(range(25, 32), k=49)
        # self.temp_data_line = self.graphs.Temp.plot(self.temp_x, self.temp_y, pen=self.graphs.Temp_pen)
        # self.alti_x = []
        # self.alti_y = []
        # self.alti_x = list(range(1,50))
        # self.alti_y = random.choices(range(0, 10), k=49)
        # self.alti_data_line = self.graphs.Altitude.plot(self.alti_x, self.alti_y, pen=self.graphs.Temp_pen)
        # self.alti_diff_x = []
        # self.alti_diff_y = []
        # self.alti_diff_x = list(range(1,50))
        # self.alti_diff_y = random.choices(range(0, 5), k=49)
        # self.alti_diff_data_line = self.graphs.Altitude_Difference.plot(self.alti_diff_x, self.alti_diff_y, pen=self.graphs.Temp_pen)
        # self.pressure_x = []
        # self.pressure_y = []
        # self.pressure_x = list(range(1,50))
        # self.pressure_y = random.choices(range(1000, 1020), k=49)
        # self.pressure_data_line = self.graphs.Pressure.plot(self.pressure_x, self.pressure_y, pen=self.graphs.Temp_pen)
        # self.velocity_x = []
        # self.velocity_y = []
        # self.velocity_x = list(range(1,50))
        # self.velocity_y = random.choices(range(0, 14), k=49)
        # self.velocity_data_line = self.graphs.Velocity.plot(self.velocity_x, self.velocity_y, pen=self.graphs.Temp_pen)
        self.verticalLayout_4.addWidget(self.widget_8)

        self.horizontalLayout_2.addWidget(self.widget_5)
        self.horizontalLayout_2.setStretch(0, 6)
        self.verticalLayout.addWidget(self.Bottom_panel)
        self.verticalLayout.setStretch(0, 2)
        self.verticalLayout.setStretch(1, 8)
        self.verticalLayout_2.addWidget(self.TopContainer)

        self.BottomContainer = QtWidgets.QWidget(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(10)
        sizePolicy.setVerticalStretch(10)
        sizePolicy.setHeightForWidth(self.BottomContainer.sizePolicy().hasHeightForWidth())
        self.BottomContainer.setSizePolicy(sizePolicy)
        self.BottomContainer.setStyleSheet("background-color: rgb(0, 0, 0, 0);\n""")
        self.BottomContainer.setObjectName("BottomContainer")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.BottomContainer)
        self.horizontalLayout.setContentsMargins(2, 2, 2, 2)
        self.horizontalLayout.setSpacing(2)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.Telemetri = QtWidgets.QTableWidget(self.BottomContainer)
        font = QtGui.QFont()
        font.setFamily("Courier New")
        font.setPointSize(8)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.Telemetri.horizontalHeader().setSectionResizeMode(QtWidgets.QHeaderView.ResizeToContents)
        self.Telemetri.horizontalHeader().setDefaultSectionSize(80)
        self.Telemetri.verticalHeader().setDefaultSectionSize(10)
        self.Telemetri.setFont(font)
        self.Telemetri.setStyleSheet("QTableView\n""{\n""    background-color:rgb(0, 0, 0, 175);\n""    border: 1px groove #333333;\n""    color: #f0f0f0;\n""    font-weight: bold;\n""    gridline-color: #333333;\n""    outline : 0;\n""\n""}\n""\n""\n""QTableView::disabled\n""{\n""    background-color: #242526;\n""    border: 1px solid #32414B;\n""    color: #656565;\n""    gridline-color: #656565;\n""    outline : 0;\n""\n""}\n""\n""\n""QTableView::item:hover \n""{\n""    background-color: #484c58;\n""    color: #f0f0f0;\n""\n""}\n""\n""\n""QTableView::item:selected \n""{\n""    background-color: #484c58;\n""    border: 2px groove #00ff00;\n""    color: #F0F0F0;\n""\n""}\n""\n""\n""QTableView::item:selected:disabled\n""{\n""    background-color: #1a1b1c;\n""    border: 2px solid #525251;\n""    color: #656565;\n""\n""}\n""\n""\n""QTableCornerButton::section\n""{\n""    background-color: #282830;\n""\n""}\n""\n""\n""QHeaderView::section\n""{\n""    background-color: #282830;\n""    color: #00ff00;\n""    font-weight: bold;\n""    font-size : 9pt; \n"                                     "    text-align: left;\n""    padding: 4px;\n""    \n""}\n""\n""\n""QHeaderView::section:disabled\n""{\n""    background-color: #525251;\n""    color: #656565;\n""\n""}\n""\n""\n""QHeaderView::section:checked\n""{\n""    background-color: #00ff00;\n""\n""}\n""\n""\n""QHeaderView::section:checked:disabled\n""{\n""    color: #656565;\n""    background-color: #525251;\n""\n""}\n""\n""\n""QHeaderView::section::vertical::first,\n""QHeaderView::section::vertical::only-one\n""{\n""    border-top: 0px;\n""\n""}\n""\n""\n""QHeaderView::section::vertical\n""{\n""    border-top: 0px;\n""\n""}\n""\n""\n""QHeaderView::section::horizontal::first,\n""QHeaderView::section::horizontal::only-one\n""{\n""    border-left: 0px;\n""\n""}\n""\n""\n""QHeaderView::section::horizontal\n""{\n""    border-left: 0px;\n""\n""}")
        self.Telemetri.setCornerButtonEnabled(True)
        self.Telemetri.setObjectName("Telemetri")
        self.Telemetri.setColumnCount(19)
        self.Telemetri.setRowCount(9)
        item = QtWidgets.QTableWidgetItem()
        self.Telemetri.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.Telemetri.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.Telemetri.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.Telemetri.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.Telemetri.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.Telemetri.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.Telemetri.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.Telemetri.setHorizontalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.Telemetri.setHorizontalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.Telemetri.setHorizontalHeaderItem(8, item)
        item = QtWidgets.QTableWidgetItem()
        self.Telemetri.setHorizontalHeaderItem(9, item)
        item = QtWidgets.QTableWidgetItem()
        self.Telemetri.setHorizontalHeaderItem(10, item)
        item = QtWidgets.QTableWidgetItem()
        self.Telemetri.setHorizontalHeaderItem(11, item)
        item = QtWidgets.QTableWidgetItem()
        self.Telemetri.setHorizontalHeaderItem(12, item)
        item = QtWidgets.QTableWidgetItem()
        self.Telemetri.setHorizontalHeaderItem(13, item)
        item = QtWidgets.QTableWidgetItem()
        self.Telemetri.setHorizontalHeaderItem(14, item)
        item = QtWidgets.QTableWidgetItem()
        self.Telemetri.setHorizontalHeaderItem(15, item)
        item = QtWidgets.QTableWidgetItem()
        self.Telemetri.setHorizontalHeaderItem(16, item)
        item = QtWidgets.QTableWidgetItem()
        self.Telemetri.setHorizontalHeaderItem(17, item)
        item = QtWidgets.QTableWidgetItem()
        self.Telemetri.setHorizontalHeaderItem(18, item)
        item = QtWidgets.QTableWidgetItem()
        self.Telemetri.setItem(0, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.Telemetri.setItem(0, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.Telemetri.setItem(0, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.Telemetri.setItem(0, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.Telemetri.setItem(0, 4, item)
        item = QtWidgets.QTableWidgetItem()
        self.Telemetri.setItem(0, 5, item)
        item = QtWidgets.QTableWidgetItem()
        self.Telemetri.setItem(0, 6, item)
        item = QtWidgets.QTableWidgetItem()
        self.Telemetri.setItem(0, 7, item)
        item = QtWidgets.QTableWidgetItem()
        self.Telemetri.setItem(0, 8, item)
        item = QtWidgets.QTableWidgetItem()
        self.Telemetri.setItem(0, 9, item)
        item = QtWidgets.QTableWidgetItem()
        self.Telemetri.setItem(0, 10, item)
        item = QtWidgets.QTableWidgetItem()
        self.Telemetri.setItem(0, 11, item)
        item = QtWidgets.QTableWidgetItem()
        self.Telemetri.setItem(0, 12, item)
        item = QtWidgets.QTableWidgetItem()
        self.Telemetri.setItem(0, 13, item)
        item = QtWidgets.QTableWidgetItem()
        self.Telemetri.setItem(0, 14, item)
        item = QtWidgets.QTableWidgetItem()
        self.Telemetri.setItem(0, 15, item)
        item = QtWidgets.QTableWidgetItem()
        self.Telemetri.setItem(0, 16, item)
        item = QtWidgets.QTableWidgetItem()
        self.Telemetri.setItem(0, 17, item)
        item = QtWidgets.QTableWidgetItem()
        self.Telemetri.setItem(0, 18, item)
        self.Telemetri.horizontalHeader().setVisible(True)
        self.Telemetri.horizontalHeader().setCascadingSectionResizes(True)
        self.Telemetri.horizontalHeader().setDefaultSectionSize(110)
        self.Telemetri.horizontalHeader().setHighlightSections(True)
        self.Telemetri.horizontalHeader().setMinimumSectionSize(30)
        self.Telemetri.horizontalHeader().setSortIndicatorShown(False)
        self.Telemetri.horizontalHeader().setStretchLastSection(False)
        self.Telemetri.verticalHeader().setVisible(False)
        self.Telemetri.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.Telemetri.setAutoScroll(False)
        self.horizontalLayout.addWidget(self.Telemetri)
        self.verticalLayout_2.addWidget(self.BottomContainer)
        self.verticalLayout_2.setStretch(1, 4)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menuBar = QtWidgets.QMenuBar(MainWindow)
        self.menuBar.setGeometry(QtCore.QRect(0, 0, 1920, 22))
        self.menuBar.setObjectName("menuBar")
        self.menuAyarlar = QtWidgets.QMenu(self.menuBar)
        self.menuAyarlar.setObjectName("menuAyarlar")
        MainWindow.setMenuBar(self.menuBar)
        self.menuBar.addAction(self.menuAyarlar.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def Progress(self):
        if self.counter <39:
            self.value = self.value + 1
            self.counter = self.counter + 1
        if 39<=self.counter <=50:
            self.counter = self.counter + 1
        if 51<=self.counter<=83:
            self.value = self.value + 1
            self.counter = self.counter + 1
        if 83<=self.counter<=100:
            self.counter = self.counter + 1
        if 101<=self.counter<=135:
            self.value = self.value + 1
            self.counter = self.counter + 1
        if self.value > 100:
           self.timer.stop()
        self.Video_Durum1.setProperty("value", self.value)
        # self.Video_Aktarm_Durumu1.setText(str(self.value))

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        self.Baslat.setText(_translate("MainWindow", "Başlat"))
        self.Restart.setText(_translate("MainWindow", "Restart"))
        self.Dosya_Sec.setText(_translate("MainWindow", "Dosya Seç"))
        self.Dosya_Gonder.setText(_translate("MainWindow", "Dosya Gönder"))
        self.Servo_kitle.setText(_translate("MainWindow", "Servo kitle"))
        self.Ayril.setText(_translate("MainWindow", "Ayrıl"))
        self.pushButton_9.setText(_translate("MainWindow", "A.Video Gönder"))
        self.Kalibrasyon_3.setText(_translate("MainWindow", "Kalibrasyon"))
        self.Alarm_5.setText(_translate("MainWindow", "1"))
        self.Alarm_1.setText(_translate("MainWindow", "2"))
        self.Alarm_2.setText(_translate("MainWindow", "3"))
        self.Alarm_3.setText(_translate("MainWindow", "4"))
        self.Alarm_4.setText(_translate("MainWindow", "5"))
        self.Alarm_Ikaz_Sistemi.setText(_translate("MainWindow", "ARAYÜZ İKAZ SİSTEMİ"))
        self.Batarya_Value.setText(_translate("MainWindow", "89%"))
        self.Video_Aktarm_Durumu1.setText(_translate("MainWindow", "Video Aktarım Durumu 1"))
        self.Video_Aktarm_Durumu1_2.setText(_translate("MainWindow", "Video Aktarım Durumu 2"))
        self.Ucusa_Hazir.setText(_translate("MainWindow", "Uçuşa Hazır"))
        self.Yukselme.setText(_translate("MainWindow", "Yükselme"))
        self.Model_Uydu_Inis.setText(_translate("MainWindow", "Model Uydu İniş"))
        self.Ayrilma.setText(_translate("MainWindow", "Ayrılma"))
        self.Gorev_Yuku_Inis.setText(_translate("MainWindow", "Görev Yükü İniş"))
        self.Kurtarma.setText(_translate("MainWindow", "Kurtarma"))
        self.Paket_Video_Alindi.setText(_translate("MainWindow", "Paket video alındı"))
        self.Paket_Video_Gonderildi.setText(_translate("MainWindow", "Paket Video Gönderildi"))
        self.Baudrate_box.setItemText(0, _translate("MainWindow", "115200"))
        self.Baudrate_box.setItemText(1, _translate("MainWindow", "9600"))
        self.Baudrate_box.setItemText(2, _translate("MainWindow", "57600"))
        self.Baudrate_box.setItemText(3, _translate("MainWindow", "76800"))
        self.Baudrate_box.setItemText(4, _translate("MainWindow", "230400"))
        self.Baglan.setText(_translate("MainWindow", "BAĞLAN"))
        self.Baglantiyi_kes.setText(_translate("MainWindow", "BAĞLANTIYI KES"))
        item = self.Telemetri.verticalHeaderItem(0)
        item.setText(_translate("MainWindow", "dsasd"))
        item = self.Telemetri.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Paket Numarası"))
        item = self.Telemetri.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Uydu Statüsü"))
        item = self.Telemetri.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Hata Kodu"))
        item = self.Telemetri.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Gönderme Saati"))
        item = self.Telemetri.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "Basınç1"))
        item = self.Telemetri.horizontalHeaderItem(5)
        item.setText(_translate("MainWindow", "Basınç2"))
        item = self.Telemetri.horizontalHeaderItem(6)
        item.setText(_translate("MainWindow", "Yükseklik1"))
        item = self.Telemetri.horizontalHeaderItem(7)
        item.setText(_translate("MainWindow", "Yükseklik2"))
        item = self.Telemetri.horizontalHeaderItem(8)
        item.setText(_translate("MainWindow", "İrtifa Farkı"))
        item = self.Telemetri.horizontalHeaderItem(9)
        item.setText(_translate("MainWindow", "İniş Hızı"))
        item = self.Telemetri.horizontalHeaderItem(10)
        item.setText(_translate("MainWindow", "Sıcaklık"))
        item = self.Telemetri.horizontalHeaderItem(11)
        item.setText(_translate("MainWindow", "Pil Gerilimi"))
        item = self.Telemetri.horizontalHeaderItem(12)
        item.setText(_translate("MainWindow", "GPS1 Latitude"))
        item = self.Telemetri.horizontalHeaderItem(13)
        item.setText(_translate("MainWindow", "GPS1 Longtitude"))
        item = self.Telemetri.horizontalHeaderItem(14)
        item.setText(_translate("MainWindow", "GPS1 Altitude"))
        item = self.Telemetri.horizontalHeaderItem(15)
        item.setText(_translate("MainWindow", "Pitch"))
        item = self.Telemetri.horizontalHeaderItem(16)
        item.setText(_translate("MainWindow", "Roll"))
        item = self.Telemetri.horizontalHeaderItem(17)
        item.setText(_translate("MainWindow", "Yaw"))
        item = self.Telemetri.horizontalHeaderItem(18)
        item.setText(_translate("MainWindow", "Takım no"))
        __sortingEnabled = self.Telemetri.isSortingEnabled()
        self.Telemetri.setSortingEnabled(False)
        item = self.Telemetri.item(0, 0)
        item.setText(_translate("MainWindow", "1"))
        item = self.Telemetri.item(0, 1)
        item.setText(_translate("MainWindow", "0"))
        item = self.Telemetri.item(0, 2)
        item.setText(_translate("MainWindow", "00010"))
        item = self.Telemetri.item(0, 3)
        item.setText(_translate("MainWindow", "23/01/2023, 19/05/43"))
        item = self.Telemetri.item(0, 4)
        item.setText(_translate("MainWindow", "1013.12"))
        item = self.Telemetri.item(0, 5)
        item.setText(_translate("MainWindow", "1013.12"))
        item = self.Telemetri.item(0, 6)
        item.setText(_translate("MainWindow", "1100"))
        item = self.Telemetri.item(0, 7)
        item.setText(_translate("MainWindow", "1100"))
        item = self.Telemetri.item(0, 8)
        item.setText(_translate("MainWindow", "0"))
        item = self.Telemetri.item(0, 9)
        item.setText(_translate("MainWindow", "12.500"))
        item = self.Telemetri.item(0, 10)
        item.setText(_translate("MainWindow", "16"))
        item = self.Telemetri.item(0, 11)
        item.setText(_translate("MainWindow", "3.40"))
        item = self.Telemetri.item(0, 12)
        item.setText(_translate("MainWindow", "41.1444"))
        item = self.Telemetri.item(0, 13)
        item.setText(_translate("MainWindow", "29.1008"))
        item = self.Telemetri.item(0, 14)
        item.setText(_translate("MainWindow", "700"))
        item = self.Telemetri.item(0, 15)
        item.setText(_translate("MainWindow", "180"))
        item = self.Telemetri.item(0, 16)
        item.setText(_translate("MainWindow", "180"))
        item = self.Telemetri.item(0, 17)
        item.setText(_translate("MainWindow", "180"))
        item = self.Telemetri.item(0, 18)
        item.setText(_translate("MainWindow", "19443"))
        self.Telemetri.setSortingEnabled(__sortingEnabled)
        self.menuAyarlar.setTitle(_translate("MainWindow", "Ayarlar"))
import Rsrc_rc


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
